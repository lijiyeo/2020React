{"version":3,"sources":["Container/Header.js","Container/Home.js","Container/Doc.js","router.config.js","Container/DocContent.js","Container/Jiao.js","Container/Blog.js","Container/Shequ.js","Container/Login.js","App.js","serviceWorker.js","index.js"],"names":["Header","activeClassName","exact","to","Home","props","console","log","style","textAlign","onClick","history","push","withRouter","className","routes","map","route","from","path","component","Doc","pri","match","params","type","Component","localStorage","setItem","replace","location","state","PrivateRoute","Com","rest","render","getItem","pathname","RouteWithSubRoutes","App","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.719998b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <NavLink activeClassName='active' exact to='/'>React</NavLink>\r\n                <NavLink activeClassName='active' to='/doc'>文档</NavLink>\r\n                <NavLink activeClassName='active' to='/jiaocheng'>教程</NavLink>\r\n                <NavLink activeClassName='active' to='/blog'>博客</NavLink>\r\n                <NavLink activeClassName='active' to='/shequ'>社区</NavLink>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Home = (props) => {\r\n    console.log(props);\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h2>React</h2>\r\n            <p>用于构建用户界面的 JavaScript 库</p>\r\n            <div>\r\n                <button onClick={\r\n                    ()=>props.history.push('/doc')\r\n                }>快速开始</button>\r\n                <button onClick={\r\n                    ()=>props.history.push('/jiaocheng')\r\n                }>入门教程</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n    NavLink, Route, Redirect,\r\n    useHistory,\r\n    useLocation,\r\n    useParams,\r\n    useRouteMatch,\r\n    withRouter\r\n} from 'react-router-dom'\r\nimport './doc.css';\r\nimport {RouteWithSubRoutes} from '../App'\r\n\r\nconst Doc = (props) => {\r\n    console.log(props)\r\n    return (\r\n        <div className='doc'>\r\n            <div className=\"content\">\r\n                {\r\n                    props.routes.map(route=><RouteWithSubRoutes {...route}/>)\r\n                }\r\n                <Redirect from='/doc' to='/doc/core' />\r\n            </div>\r\n            <ol>\r\n                <li><button><NavLink to='/doc/core'>核心概念</NavLink></button></li>\r\n                <li><button><NavLink to='/doc/guide'>高级指引</NavLink></button></li>\r\n                <li><button><NavLink to='/doc/api'>API</NavLink></button></li>\r\n                <li><button><NavLink to='/doc/hooks'>Hooks</NavLink></button></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withRouter(Doc);\r\n","import Home from './Container/Home';\r\nimport Doc from './Container/Doc';\r\nimport Jiao from './Container/Jiao';\r\nimport Blog from './Container/Blog';\r\nimport Shequ from './Container/Shequ';\r\nimport Login from './Container/Login';\r\nimport DocContent from './Container/DocContent';\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        exact: true,\r\n        component: Home\r\n    },\r\n    {\r\n        path: '/doc',\r\n        component: Doc,\r\n        pri: true,\r\n        routes: [\r\n            {\r\n                path: '/doc/:type',\r\n                component: DocContent,\r\n            },\r\n        ]\r\n    },\r\n    {\r\n        path: '/jiaocheng',\r\n        component: Jiao,\r\n        pri: true\r\n    },\r\n    {\r\n        path: '/blog',\r\n        component: Blog\r\n    },\r\n    {\r\n        path: '/shequ',\r\n        component: Shequ\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login\r\n    },\r\n]\r\nexport default routes;","import React, { PureComponent } from 'react'\r\n\r\nconst DocContent = (props) => {\r\n    return <h1>\r\n        { props.match.params.type }\r\n    </h1>\r\n}\r\nexport default DocContent;","import React, { Component } from 'react'\r\n\r\nexport default class Jiao extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>教程</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Blog extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>博客</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Shequ extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>社区</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nconst Login = (props) => {\r\n    const login = ()=>{\r\n        localStorage.setItem('userinfo','tom')\r\n        props.history.replace(props.location.state)\r\n    }\r\n    return (\r\n        <div>\r\n            <button onClick={login}>登录</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport { BrowserRouter as Router, Redirect, Route, NavLink, Switch } from 'react-router-dom'\nimport Header from './Container/Header';\nimport routes from './router.config';\n\n\nfunction PrivateRoute({ component: Com,routes, ...rest }) {\n\treturn (\n\t\t<Route\n\t\t\t{ ...rest }\n\t\t\trender={ ({ location }) =>\n\t\t\t\tlocalStorage.getItem('userinfo')\n\t\t\t\t\t? <Com routes={routes}/>\n\t\t\t\t\t: (\n\t\t\t\t\t\t<Redirect\n\t\t\t\t\t\t\tto={ {\n\t\t\t\t\t\t\t\tpathname: \"/login\",\n\t\t\t\t\t\t\t\tstate: location\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n}\nexport const RouteWithSubRoutes = (props) => {\n\tconst {pri,path,routes,component:Com,...rest} = props;\n\tif(pri){\n\t\treturn <PrivateRoute {...props}/>\n\t}\n\treturn (\n\t\t<Route\n\t\t\tpath={ path }\n\t\t\t{...rest}\n\t\t\trender={ props => (\n\t\t\t\t<Com { ...props } routes={ routes } />\n\t\t\t) }\n\t\t/>\n\t);\n}\nconst App = () => {\n\treturn <Router>\n\t\t<Header />\n\t\t<Switch>\n\t\t\t{\n\t\t\t\troutes.map(props => {\n\t\t\t\t\treturn <RouteWithSubRoutes { ...props } />\n\t\t\t\t})\n\t\t\t}\n\t\t</Switch>\n\t</Router>\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}